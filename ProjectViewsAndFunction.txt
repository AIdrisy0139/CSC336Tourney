CREATE VIEW viewFollowingTournaments AS 
	SELECT tournament.id AS tourney_id, tournament_name, creator_name, sport_name, users.id AS user_id
	FROM users JOIN follows_tournament ON users.id = follows_tournament.user_id 
	JOIN tournament ON follows_tournament.tournament_id = tournament.id

CREATE VIEW viewGetTourneyMatches AS
	SELECT matches.*, T1.team_name AS home_team_name, T2.team_name AS visiting_team_name FROM matches
	JOIN team T1 ON matches.home_team_id = T1.id
	JOIN team T2 ON matches.visiting_team_id = T2.id

CREATE VIEW viewAwayTeamMatches AS
	SELECT *
	FROM team JOIN matches ON team.id = matches.visiting_team_id

CREATE FUNCTION awayMatchesWon (teamId) RETURNS int
	SELECT COUNT(*) 
	FROM viewAwayTeamMatches 
	WHERE matches.awayTeamId = teamId AND matches.visiting_team_score > matches.home_team_score
	
-- Stored Procedures for inserts
CREATE PROCEDURE insertUserProc(
	newUsername VARCHAR(255),
	newEmail VARCHAR(255),
	newPassword VARCHAR (255))
	INSERT INTO users(username,email,password) 
	VALUES (newUsername,newEmail,newPassword);
	
CREATE PROCEDURE insertProfileProc(
	newUserId INT,
	newDisplayName VARCHAR(255),
	newUrl VARCHAR(255),
	newInterests VARCHAR(255))
	INSERT INTO profiles(user_id, display_name, pfp_url, interests) 
	VALUES(newUserId, newDisplayName,newUrl,newInterests);
	
CREATE PROCEDURE insertTourneyProc(
	newCreateName VARCHAR(255),
	newTourneyName VARCHAR(255),
	newSportName VARCHAR(255))
	INSERT INTO tournament(creator_name,tournament_name, sport_name)
	VALUES(newCreateName,newTourneyName,newSportName);
	
CREATE PROCEDURE insertTeamProc(
	newTeamName VARCHAR(255),
	newSportName VARCHAR(255))
	INSERT INTO team(team_name,sport_name)
	VALUES(newTeamName,newSportName);
	

